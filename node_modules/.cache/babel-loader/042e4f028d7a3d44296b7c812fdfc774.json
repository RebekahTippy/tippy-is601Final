{"ast":null,"code":"var _jsxFileName = \"/home/tippy/Documents/AccessPoint/week-8-final/tippy-is601Final/src/PokemonSelector.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //component that holds title and 3 buttons\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokemonSelector(props) {\n  _s();\n\n  //chooseSnippet:start new game, records snippet text as state in app.js\n  const {\n    pokedex\n  } = props;\n  const [pokemon, setPokemon] = useState([]);\n  useEffect(function () {\n    const P = new Pokedex.Pokedex();\n\n    async function fetchData() {\n      await P.getPokedexByName(pokedex).then(response => setPokedexes(response.results)).catch(err => setError(err));\n    }\n\n    fetchData();\n  }, []);\n  return pokemon.map(_ref => {\n    let {\n      name\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }, this);\n  });\n}\n\n_s(PokemonSelector, \"XlXwxRo46VaSHd/fnv7QhOEdyyE=\");\n\n_c = PokemonSelector;\n;\nexport default PokemonSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonSelector\");","map":{"version":3,"names":["React","useState","useEffect","PokemonSelector","props","pokedex","pokemon","setPokemon","P","Pokedex","fetchData","getPokedexByName","then","response","setPokedexes","results","catch","err","setError","map","name"],"sources":["/home/tippy/Documents/AccessPoint/week-8-final/tippy-is601Final/src/PokemonSelector.jsx"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\n\n\n\n//component that holds title and 3 buttons\nfunction PokemonSelector(props) {\n    //chooseSnippet:start new game, records snippet text as state in app.js\n    const { pokedex } = props;\n\nconst [pokemon, setPokemon ] = useState([]);\n\n    useEffect(function() {\n        const P = new Pokedex.Pokedex();\n          async function fetchData() {\n              await P.getPokedexByName(pokedex).then( response => setPokedexes(response.results))\n                  .catch(err => setError(err))\n          }\n          fetchData();\n      }, []);\n\n   \n    return pokemon.map(({name }) => <button  >{name}</button>)\n\n\n    \n};\n\nexport default PokemonSelector\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C,C,CAIA;;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;EAAA;;EAC5B;EACA,MAAM;IAAEC;EAAF,IAAcD,KAApB;EAEJ,MAAM,CAACE,OAAD,EAAUC,UAAV,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;EAEIC,SAAS,CAAC,YAAW;IACjB,MAAMM,CAAC,GAAG,IAAIC,OAAO,CAACA,OAAZ,EAAV;;IACE,eAAeC,SAAf,GAA2B;MACvB,MAAMF,CAAC,CAACG,gBAAF,CAAmBN,OAAnB,EAA4BO,IAA5B,CAAkCC,QAAQ,IAAIC,YAAY,CAACD,QAAQ,CAACE,OAAV,CAA1D,EACDC,KADC,CACKC,GAAG,IAAIC,QAAQ,CAACD,GAAD,CADpB,CAAN;IAEH;;IACDP,SAAS;EACZ,CAPM,EAOJ,EAPI,CAAT;EAUA,OAAOJ,OAAO,CAACa,GAAR,CAAY;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,oBAAa;MAAA,UAAWA;IAAX;MAAA;MAAA;MAAA;IAAA,QAAb;EAAA,CAAZ,CAAP;AAIH;;GApBQjB,e;;KAAAA,e;AAoBR;AAED,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}