{"ast":null,"code":"import localForage from \"localforage\";\nimport endpoints from './endpoints.json';\nimport rootEndpoints from './rootEndpoints.json';\nimport { loadResource } from './getter.js';\nimport { installSW } from './installSW.js';\nimport { Config } from './config.js';\nlocalForage.config({\n  name: 'pokeapi-js-wrapper'\n});\nexport class Pokedex {\n  constructor(config) {\n    this.config = new Config(config); // add to Pokedex.prototype all our endpoint functions\n\n    endpoints.forEach(endpoint => {\n      const endpointFullName = buildEndpointFullName(endpoint);\n\n      this[endpointFullName] = input => {\n        if (input) {\n          // if the user has submitted a Name or an ID, return the JSON promise\n          if (typeof input === 'number' || typeof input === 'string') {\n            return loadResource(this.config, `${this.config.versionPath}${endpoint[2].replace(':id', input)}`);\n          } // if the user has submitted an Array\n          // return a new promise which will resolve when all loadResource calls are ended\n          else if (typeof input === 'object') {\n            return Promise.all(mapResources(this.config, endpoint, input));\n          }\n        }\n      };\n\n      this[buildEndpointName(endpoint)] = this[endpointFullName];\n    });\n    rootEndpoints.forEach(rootEndpoint => {\n      const rootEndpointFullName = buildRootEndpointFullName(rootEndpoint);\n\n      this[rootEndpointFullName] = config => {\n        var limit = this.config.limit;\n        var offset = this.config.offset;\n\n        if (config) {\n          if (config.hasOwnProperty('offset')) {\n            offset = config.offset;\n          }\n\n          if (config.hasOwnProperty('limit')) {\n            limit = config.limit;\n          }\n        }\n\n        return loadResource(this.config, `${this.config.versionPath}${rootEndpoint[1]}?limit=${limit}&offset=${offset}`);\n      };\n\n      this[rootEndpoint[0]] = this[rootEndpointFullName];\n    });\n\n    if (this.config.cacheImages) {\n      installSW();\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  getCacheLength() {\n    return localForage.length();\n  }\n\n  clearCache() {\n    return localForage.clear();\n  }\n\n  resource(path) {\n    if (typeof path === 'string') {\n      return loadResource(this.config, path);\n    } else if (Array.isArray(path)) {\n      return Promise.all(path.map(p => loadResource(this.config, p)));\n    } else {\n      return 'String or Array is required';\n    }\n  }\n\n}\n\nfunction mapResources(config, endpoint, inputs) {\n  return inputs.map(input => {\n    return loadResource(config, `${config.versionPath}${endpoint[2].replace(':id', input)}`);\n  });\n}\n\nfunction buildEndpointFullName(endpoint) {\n  return `${endpoint[0]}By${capitalize(endpoint[1])}`;\n}\n\nfunction buildEndpointName(endpoint) {\n  return `${endpoint[0]}`;\n}\n\nfunction buildRootEndpointFullName(endpoint) {\n  return `${endpoint[0]}List`;\n}\n\nfunction capitalize(_ref) {\n  let [first, ...rest] = _ref;\n  return first.toUpperCase() + rest.join('').toLowerCase();\n}","map":{"version":3,"names":["localForage","endpoints","rootEndpoints","loadResource","installSW","Config","config","name","Pokedex","constructor","forEach","endpoint","endpointFullName","buildEndpointFullName","input","versionPath","replace","Promise","all","mapResources","buildEndpointName","rootEndpoint","rootEndpointFullName","buildRootEndpointFullName","limit","offset","hasOwnProperty","cacheImages","getConfig","getCacheLength","length","clearCache","clear","resource","path","Array","isArray","map","p","inputs","capitalize","first","rest","toUpperCase","join","toLowerCase"],"sources":["/home/tippy/Documents/AccessPoint/week-8-final/tippy-is601Final/node_modules/pokeapi-js-wrapper/src/index.js"],"sourcesContent":["import localForage from \"localforage\"\n\nimport endpoints from './endpoints.json'\nimport rootEndpoints from './rootEndpoints.json'\nimport { loadResource } from './getter.js'\nimport { installSW } from './installSW.js'\nimport { Config } from './config.js'\n\nlocalForage.config({\n    name: 'pokeapi-js-wrapper'\n})\n\nexport class Pokedex {\n\n    constructor(config) {\n        this.config = new Config(config)\n\n        // add to Pokedex.prototype all our endpoint functions\n        endpoints.forEach(endpoint => {\n            const endpointFullName = buildEndpointFullName(endpoint)\n            this[endpointFullName] = input => { \n                if (input) {\n\n                    // if the user has submitted a Name or an ID, return the JSON promise\n                    if (typeof input === 'number' || typeof input === 'string') {\n                        return loadResource(this.config, `${this.config.versionPath}${endpoint[2].replace(':id', input)}`) \n                    }\n            \n                    // if the user has submitted an Array\n                    // return a new promise which will resolve when all loadResource calls are ended\n                    else if (typeof input === 'object') {\n                        return Promise.all(mapResources(this.config, endpoint, input))\n                    }\n                }\n            }\n            this[buildEndpointName(endpoint)] = this[endpointFullName]\n        })\n\n        rootEndpoints.forEach(rootEndpoint => {\n            const rootEndpointFullName = buildRootEndpointFullName(rootEndpoint)\n            this[rootEndpointFullName] = config => {\n                var limit = this.config.limit\n                var offset = this.config.offset\n                if (config) {\n                    if (config.hasOwnProperty('offset')) {\n                        offset = config.offset\n                    }\n                    if (config.hasOwnProperty('limit')) {\n                        limit = config.limit\n                    }\n                }\n                return loadResource(this.config, `${this.config.versionPath}${rootEndpoint[1]}?limit=${limit}&offset=${offset}`)\n            }\n            this[rootEndpoint[0]] = this[rootEndpointFullName]\n        })\n\n        if (this.config.cacheImages) {\n            installSW()\n        }\n    }\n\n    getConfig() {\n        return this.config\n    }\n\n    getCacheLength() {\n        return localForage.length()\n    }\n\n    clearCache() {\n        return localForage.clear()\n    }\n\n    resource(path) {\n        if (typeof path === 'string') {\n            return loadResource(this.config, path)\n        } else if (Array.isArray(path)) {\n            return Promise.all(path.map(p => loadResource(this.config, p)))\n        } else {\n            return 'String or Array is required'\n        }\n    }\n}\n\nfunction mapResources(config, endpoint, inputs) {\n    return inputs.map(input => {\n        return loadResource(config, `${config.versionPath}${endpoint[2].replace(':id', input)}`)\n    })\n}\n\nfunction buildEndpointFullName(endpoint) {\n    return `${endpoint[0]}By${capitalize(endpoint[1])}`\n}\n\nfunction buildEndpointName(endpoint) {\n    return `${endpoint[0]}`\n}\n\nfunction buildRootEndpointFullName(endpoint) {\n    return `${endpoint[0]}List`\n}\n\nfunction capitalize([first,...rest]) {\n    return first.toUpperCase() + rest.join('').toLowerCase()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}